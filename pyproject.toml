[project]
authors = [
    {name = "Eivind Fonn", email = "eivind.fonn@sintef.no"},
]
requires-python = ">=3.11,<4.0"
dependencies = [
    "click<9.0.0,>=8.1.3",
    "Splipy<2.0.0,>=1.7.0",
    "rich<15.0.0,>=14.0.0",
    "f90nml<2.0.0,>=1.4.3",
    "h5py<4.0.0,>=3.8.0",
    "numpy<3.0.0,>=2.0.0",
    "vtk<10.0.0,>=9.2.5",
    "netCDF4<2.0.0,>=1.7.2",
    "pyerfa<3.0.0.0,>=2.0.0.1",
    "attrs<26.0.0,>=25.0.0",
    "click-option-group<1.0.0,>=0.5.5",
    "jax<1.0.0,>=0.4.6",
    "jaxlib<1.0.0,>=0.4.6",
    "more-itertools>=10.2.0",
    "lrspline>=1.15.1",
]
name = "siso"
version = "4.1.0"
description = ""
readme = "README.rst"

[project.scripts]
siso = "siso.__main__:main"

[project.optional-dependencies]
vtf = ["vtfwriter"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.ruff]
line-length = 110
include = ["siso/**/*.py", "tests/**/*.py", "stubs/**/*.pyi"]

[tool.ruff.lint]
select = [
    "F",        # Pyflakes rules
    "W",        # PyCodeStyle warnings
    "E",        # PyCodeStyle errors
    "I",        # Sort imports properly
    "UP",       # Warn if certain things can changed due to newer Python versions
    "C4",       # Catch incorrect use of comprehensions, dict, list, etc
    "FA",       # Enforce from __future__ import annotations
    "ISC",      # Good use of string concatenation
    "ICN",      # Use common import conventions
    "RET",      # Good return practices
    "SIM",      # Common simplification rules
    "TID",      # Some good import practices
    "TCH",      # Enforce importing certain types in a TYPE_CHECKING block
    "PTH",      # Use pathlib instead of os.path
    "TD",       # Be diligent with TODO comments
    "NPY",      # Some numpy-specific things
]
ignore = [
    "E741",     # Ambiguous variable name
    "SIM115",   # Complains if we use __enter__ inside an __enter__ method
    "ISC001",   # Conflicts with rust formatting
    "TD003",    # Issue links for each todo comment
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
files = ["siso/**/*.py"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true

# Add path to stubs directory if you need to write stubs
mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs"

[[tool.mypy.overrides]]
module = "siso.util.bisect"
ignore_errors = true

[tool.pdm.dev-dependencies]
dev = [
    "pytest<9.0.0,>=8.3.5",
    "mypy<2.0.0,>=1.15.0",
    "ruff<1.0.0,>=0.11.2",
    "bump-my-version>=1.1.1",
    "vtfwriter-stubs>=1.1.0",
]

[tool.pdm.build]
includes = []

[tool.bumpversion]
current_version = "4.1.0"
allow_dirty = false
commit = true
tag = true
parse = """(?x)
    (?P<major>[0-9]+)
    \\.(?P<minor>[0-9]+)
    \\.(?P<patch>[0-9]+)
    (?:
        (?P<pre_label>a|b|rc|stable)
        (?P<pre_number>[0-9]+)?
    )?
"""
serialize = [
    "{major}.{minor}.{patch}{pre_label}{pre_number}",
    "{major}.{minor}.{patch}",
]
message = "Bump version: {current_version} -> {new_version}"
tag_message = "Bump version: {current_version} -> {new_version}"
sign_tags = true

[tool.bumpversion.parts.pre_label]
optional_value = "stable"
values = [
    "a",
    "b",
    "rc",
    "stable",
]

[tool.bumpversion.parts.pre_number]
first_value = "1"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
