name: Python package

on:
  push:
    branches: [ master ]
    tags: ['*']
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v3

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pdm
          make install
      - name: Generate vtk type stubs
        run: |
          pdm run python -m vtkmodules.generate_pyi
          pdm run python -c "import vtkmodules; from pathlib import Path; (Path(vtkmodules.__path__[0]) / 'py.typed').touch()"
      - name: Test with pytest
        run: |
          make test

  build:
    name: Build
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pdm
      - name: Build wheels
        run: |
          make build
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/*.whl

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.pypi_pwd }}

  test-deploy:
    name: Test Deploy
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.pypi_test_pwd }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
